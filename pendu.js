/* Jour 7 exercice : cr√©er un pendu */
/* 
 üìù Consignes :
1.Cr√©e un tableau de mots (au moins 5) que le programme pourra choisir al√©atoirement.

2.√âcris une fonction qui :
choisit un mot al√©atoire depuis ce tableau.
masque ce mot en ne laissant visibles que la premi√®re et la derni√®re lettre (les autres lettres sont remplac√©es par des _).

3.Demande √† l‚Äôutilisateur de proposer une lettre (en boucle) :
S‚Äôil propose une lettre d√©j√† devin√©e, affiche un message d‚Äôerreur.
S‚Äôil propose une mauvaise lettre, r√©duis le nombre de tentatives restantes.
S‚Äôil propose une bonne lettre, elle s'affiche √† toutes les bonnes positions dans le mot.

4.Le jeu continue jusqu‚Äô√† ce que :
Le mot soit enti√®rement d√©voil√© (victoire).
Ou que le nombre de tentatives atteigne z√©ro (d√©faite).

5.√Ä la fin de la partie, demande √† l‚Äôutilisateur s‚Äôil veut rejouer.

üîß Contraintes techniques √† respecter :
Utilise des fonctions pour organiser ton code (choisirMot, masquerMot, verifierLettre, etc.).
Utiise une boucle while ou for pour g√©rer les tours de jeu.
Utilise un tableau pour stocker les lettres devin√©es. */

// fonction qui permet de choisir un mot au hasard dans un tableau
function choisirMot(){ 

    let words =["Albatros", "Ecurueil", "Ornithorynque", "C√©tac√©s", "F√©lins", "Tortue", "Gorille"];
    let randomWord = words[Math.floor(Math.random()* words.length)];
    return randomWord;

}
// afficher partiellement le mot de choisirMot() en affichant la premi√®re et derni√®re lettre
function motCach√©(motaleatoire){ 

    let hiddenWord = [];

    for (let i = 0; i < motaleatoire.length; i++){ 

        if (i === 0 || i === motaleatoire.length - 1){ 
            hiddenWord.push(motaleatoire[i]);
        } else {
            hiddenWord.push("_");
        }
    }
    return hiddenWord;
}

let mot = choisirMot();
let motDeviner = motCach√©(mot);
console.log(motDeviner);