/* Jour 7 exercice : cr√©er un pendu */
/* 
 üìù Consignes :
1.Cr√©e un tableau de mots (au moins 5) que le programme pourra choisir al√©atoirement.

2.√âcris une fonction qui :
choisit un mot al√©atoire depuis ce tableau.
masque ce mot en ne laissant visibles que la premi√®re et la derni√®re lettre (les autres lettres sont remplac√©es par des _).

3.Demande √† l‚Äôutilisateur de proposer une lettre (en boucle) :
S‚Äôil propose une lettre d√©j√† devin√©e, affiche un message d‚Äôerreur.
S‚Äôil propose une mauvaise lettre, r√©duis le nombre de tentatives restantes.
S‚Äôil propose une bonne lettre, elle s'affiche √† toutes les bonnes positions dans le mot.

4.Le jeu continue jusqu‚Äô√† ce que :
Le mot soit enti√®rement d√©voil√© (victoire).
Ou que le nombre de tentatives atteigne z√©ro (d√©faite).

5.√Ä la fin de la partie, demande √† l‚Äôutilisateur s‚Äôil veut rejouer.

üîß Contraintes techniques √† respecter :
Utilise des fonctions pour organiser ton code (choisirMot, masquerMot, verifierLettre, etc.).
Utiise une boucle while ou for pour g√©rer les tours de jeu.
Utilise un tableau pour stocker les lettres devin√©es. */

// fonction qui permet de choisir un mot au hasard dans un tableau

function choisirMot(){

    let words = ["Albatros", "Ecureuil", "Ornithorynque", "C√©tac√©s", "F√©lins", "Tortue", "Gorille"];
    let selectWord = words[Math.floor(Math.random() * words.length)];
    return selectWord;

}

function motTrou (motaleatoire){

    let hiddenWord = [];

    for (let i = 0; i < motaleatoire.length; i++){

        if (i === 0 || i === motaleatoire.length - 1){
            hiddenWord.push(motaleatoire[i]);
        } else {
            hiddenWord.push("_");
        }
    }
    return hiddenWord;
}

function affichageMot (motatrou){
    console.log(motatrou.join(" "));
}

let tentativesRestantes = 7;
let motaTrouver = choisirMot();
let motaTrou = motTrou(motaTrouver);

function v√©rifierLettre (proposition){

    let propositionsFaites = [];
    let trouv√© = false;

    while(tentativesRestantes > 0 && motaTrouver !== proposition){

        let proposition = prompt("Proposez une lettre.").toLowerCase();

        if(!/^[a-z]$/.test(proposition)){
            alert(`"${proposition}" n'est pas une lettre. Veuillez saisir une lettre.`);
        } else if (propositionsFaites.includes(proposition) && !motaTrou.includes(proposition)){
            alert(`Vous avez d√©j√† propos√© la lettre "${proposition}" et elle ne fait pas partie du mot √† deviner !`)
        } else if (propositionsFaites.includes(proposition)){
            alert (`Vous avez d√©j√† devin√© la lettre ${proposition}. Veuillez saisir une autre lettre.`);
        } else {

            for (let i = 0; i < motaTrouver.length; i++){
                
                if (proposition === motaTrouver[i]){
                    motaTrou[i] = proposition; 
                    trouv√© = true; 
                }   
            }     
            if (trouv√©){
                alert(`"${proposition}" est une bonne r√©ponse !`)
            } else {
                tentativesRestantes--;
                alert (`Mauvaise r√©ponse  : "${proposition} ne fait pas partie du mot. Il vous reste ${tentativesRestantes} pour trouver !`)
            }      
            propositionsFaites.push(proposition);
            affichageMot(motaTrou);        
         }      
    }

}





/* Tant que l'utilisateur √† des tentatives restantes :  */

// Demander √† l'utilisateur une proposition
// si la proposition est un chiffre : afficher un message d'erreur
// si la proposition est une lettre d√©j√† devin√©e : afficher un message d'erreur
// si la proposition est une lettre fausse et d√©j√† propos√©e : afficher un message d'erreur

/* Si aucune la proposition ne remplit aucune des conditions ci-dessus :  */

// Si la proposition n'est pas bonne => afficher un message + d√©compter une tentative + stocker cette proposition dans les propositions d√©j√† faites.
// Si la proposition est bonne => afficher un message + stocker la proposition dans les propositions d√©j√† faites + ajouter la lettre devin√©e
