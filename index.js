/* üö≤ Exercice : Gestion de location de v√©los */
/* Objectif : Cr√©er un petit programme en JavaScript qui permet de g√©rer la location et le retour de v√©los dans une station.  */

/*üéØ Consignes
Cr√©e un tableau velos contenant des objets repr√©sentant chaque v√©lo.

1. Chaque objet doit avoir :
- id (un num√©ro ou une cha√Æne unique),
- modele (ex. : "VTT", "V√©lo de ville", "BMX"),
- disponible (true ou false),
- couleur.

2. Affiche la liste des v√©los disponibles √† chaque boucle.

3.Demande √† l'utilisateur via prompt() s'il souhaite louer ou rendre un v√©lo.
Si l'utilisateur choisit louer :
Demande le id ou mod√®le du v√©lo souhait√©.
V√©rifie s'il est disponible.
Marque le v√©lo comme lou√© (disponible = false) s'il l'est.

5. Si l'utilisateur choisit rendre :
Demande le id ou mod√®le.
V√©rifie s'il est actuellement lou√©.
Marque le v√©lo comme disponible (disponible = true).

6. R√©p√®te la boucle jusqu'√† ce que l'utilisateur dise non.*/

velosDisponibles = [
    { ID : "BMX", Mod√®le : "BMX freestyle", Disponible : true, Couleur : "bleu" },
    { ID : "VTT", Mod√®le : "VTT for√™t", Disponible : true, Couleur : "jaune" },
    { ID : "V√©lo casual", Mod√®le : "V√©lo de ville", Disponible : true, Couleur : "gris" },
    { ID : "V√©lo casual 2", Mod√®le : "V√©lo de ville", Disponible : true, Couleur : "blanc" },
];
let gestionLocation = "oui"

while (gestionLocation.toLowerCase() === "oui"){

    console.log("Voici les v√©los actuellement disponibles en magasin :")

    let veloDisponibleMaintenant = velosDisponibles.filter(velo => velo.Disponible);
    veloDisponibleMaintenant.forEach(velo => console.log(`ID : ${velo.ID} | Mod√®le : ${velo.Mod√®le} | Couleur : ${velo.Couleur} `));

    let louerRendre = prompt("Que voulez-vous faire : louer ou rendre un v√©lo ?").toLowerCase();

    if (louerRendre === "louer"){
        let v√©loVoulu = prompt("Quel v√©lo voulez-vous parmi ceux disponibles ? (Tapez l'ID).").toLowerCase();
        let v√©loTrouv√© = velosDisponibles.find(velo => velo.ID.toLowerCase() === v√©loVoulu);

        if (v√©loTrouv√© && v√©loTrouv√©.Disponible){
            v√©loTrouv√©.Disponible = false;
            console.log(`Vous venez de louer le v√©lo suivant : ${v√©loTrouv√©.ID}.`)
        } else {
            alert("Malheureusement le v√©lo demand√© n'est actuellement pas disponible !")
        }
    } else if (louerRendre === "rendre"){
        let v√©loaRendre = prompt("Quel v√©lo souhaitez-vous rendre ?").toLowerCase();
        let v√©loEmprunt√© = velosDisponibles.find(velo => velo.ID.toLowerCase() === v√©loaRendre);
        
        if (v√©loEmprunt√© && v√©loEmprunt√©.Disponible === false){
            v√©loEmprunt√©.Disponible = true; 
            console.log(`Vous venez de rendre le v√©lo suivant : ${v√©loEmprunt√©.ID}.`)
        } else {
            alert("Le v√©lo que vous souhaitez n'existe pas chez nous.");
        }
    } gestionLocation = prompt("Souhaitez-vous louer ou rendre un autre v√©lo ?").toLowerCase();
}